Imports Microsoft.VisualBasic

Namespace Includes.SQL

  Public Class clsMoveScript
    Const sColSQL As String = "Select Name, is_Identity from sys.columns where object_id = {0}"

    Private lstTables As New List(Of String)

    Public Sub AddTable(ByVal sTable As String)
      lstTables.Add(sTable)
    End Sub

    Public Sub RemoveAllTables()
      lstTables.Clear()
    End Sub

    Public eOptions As enumOptions = 0
    Public sDatabaseName As String
    Public sSourceServer As String
    Public sDestServer As String
    Public sUserID As String


    Private _DestinationConnectionString As String

    Public Function InsertFrom() As String
      Dim sqlTblRdr As Data.OleDb.OleDbDataReader
      Dim sqlTblConn As New OleDb.OleDbConnection(_DestinationConnectionString)
      Dim sqlTblCmd As New OleDb.OleDbCommand("select t.name, t.object_id,s.name from sys.tables T join sys.schemas S on s.schema_id=t.schema_id order by 1", sqlTblConn)
      'Dim ioScript As New IO.StreamWriter("C:\Apps\SQLScript\Script.txt", False)
      Dim sbScript As New System.Text.StringBuilder

      Dim sqlColRdr As Data.OleDb.OleDbDataReader
      Dim sqlColConn As New OleDb.OleDbConnection(_DestinationConnectionString)
      Dim sqlColCmd As New OleDb.OleDbCommand("", sqlColConn)
      Dim sbColumnNames As New System.Text.StringBuilder
      Dim bHasIdentity As Boolean


      sqlTblConn.Open()
      sqlColConn.Open()

      sqlColCmd.CommandType = CommandType.Text

      sqlTblRdr = sqlTblCmd.ExecuteReader

      sbScript.AppendLine("/*")
      sbScript.AppendLine("Generated using the Script Building tool in the Ecommerce Development Tools Website")
      sbScript.AppendFormat(" Generated By : {0} ", sUserID)
      sbScript.AppendLine()
      sbScript.AppendFormat(" Generated on : {0} ", Now)
      sbScript.AppendLine()
      sbScript.AppendLine()
      sbScript.AppendFormat(" This script will take the data that is in server {0} to server {1} for the tables in {2}", sSourceServer, sDestServer, sDatabaseName)

      sbScript.AppendLine()
      If (eOptions And enumOptions.DeleteFirst) = enumOptions.DeleteFirst Then
        sbScript.AppendLine("WARNING: This script will delete the destination table data before inserting it")
      End If
      sbScript.AppendLine("*/")
      sbScript.AppendLine()
      sbScript.AppendLine()

      While sqlTblRdr.Read
        If lstTables.Contains(sqlTblRdr(0)) Then

          bHasIdentity = False
          sqlColCmd.CommandText = String.Format(sColSQL, sqlTblRdr(1))
          sbColumnNames.Remove(0, sbColumnNames.Length)
          sqlColRdr = sqlColCmd.ExecuteReader

          While sqlColRdr.Read
            If sqlColRdr(1) = True Then
              bHasIdentity = True
            End If
            sbColumnNames.AppendFormat("[{0}],", sqlColRdr(0))
          End While
          sqlColRdr.Close()

          'Remove the last ,
          sbColumnNames.Remove(sbColumnNames.Length - 1, 1)

          sbScript.AppendFormat("Print 'Starting to work on table {0}'", sqlTblRdr(0))
          sbScript.AppendLine()
          If eOptions And enumOptions.DeleteFirst = enumOptions.DeleteFirst Then
            sbScript.AppendFormat("Delete from [{0}].[{1}].[{2}]", sDatabaseName, sqlTblRdr(2), sqlTblRdr(0))
            sbScript.AppendLine()
          End If

          If bHasIdentity Then
            sbScript.AppendFormat("set identity_insert [{0}].[{1}].[{2}] ON", sDatabaseName, sqlTblRdr(2), sqlTblRdr(0))
            sbScript.AppendLine()
          End If

          'ioScript.WriteLine("select * into {0} from {0}", sqlTblRdr(0))
          sbScript.AppendFormat("insert into [{0}].[{4}].[{1}] ({2}) select {2} from [{3}].[{0}].[{4}].[{1}]", sDatabaseName, sqlTblRdr(0), sbColumnNames, sSourceServer, sqlTblRdr(2))
          sbScript.AppendLine()

          If bHasIdentity Then
            sbScript.AppendFormat("set identity_insert [{0}].[{2}].[{1}] OFF", sDatabaseName, sqlTblRdr(0), sqlTblRdr(2))
            sbScript.AppendLine()
          End If

          sbScript.AppendFormat("Print 'Finished working on table {0}'", sqlTblRdr(0))
          sbScript.AppendLine()

          'Empty Line
          sbScript.AppendLine()
        End If

      End While

      sqlTblRdr.Close()

      Return sbScript.ToString

    End Function

    <Flags()>
    Public Enum enumOptions
      DeleteFirst = 1
    End Enum



    Public Sub New(ByVal sDestinationConnectionString As String)
      _DestinationConnectionString = sDestinationConnectionString
    End Sub
  End Class

End Namespace